/*
 * Copyright 2014 OCTO Technology
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

task usage << {
    println "gradlew task                : Displays the tasks runnable from root project."
    println "gradlew idea                : Generates IDEA project files (IML, IPR, IWS)"
    println "gradlew clean               : Deletes the build directory."
    println "gradlew build               : build for Jdk8+."
    println "gradlew build -x test       : build for Jdk7."
    println "gradlew installDist         : Generate a publication in build/install/audit-reactive."
    println "gradlew publishToMavenLocal : Publishes all Maven publications produced by this project to the local Maven cache."
    println "gradlew publish             : Publishes all publications produced by this project."
}

buildscript {
    repositories {
        maven {
            url "https://maven.eveoh.nl/content/repositories/releases"
        }
    }

    dependencies {
        classpath "nl.eveoh:gradle-aspectj:1.4"
    }
}

repositories {
    mavenCentral()
}

project.ext {
    aspectjVersion = '1.8.2'
}

apply plugin: 'aspectj'
apply plugin: 'distribution'
apply plugin: 'maven-publish'
apply plugin: 'signing'

// At this time, Eclipse is not compatible with Java8 and Gradle
//apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = '7'
targetCompatibility = '7'

description = 'JVM Agent to detect blocking IO call (https://github.com/pprados/audit-reactive)'

allprojects {
    group = "com.octo.reactive.audit"
    version = '0.0.4-SNAPSHOT' // Don't forget to update init-home
}

dependencies {
    compile project(":audit-reactive-lib")
    compile "org.aspectj:aspectjrt:${aspectjVersion}"
    compile "org.aspectj:aspectjtools:${aspectjVersion}"

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testRuntime "org.aspectj:aspectjweaver:${aspectjVersion}"
    testRuntime "org.aspectj:aspectjrt:${aspectjVersion}"
    testRuntime "org.scala-lang:scala-library:2.11.1"
    testRuntime "org.apache.derby:derby:10.10.2.0"
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar
    archives javadocJar
}

// Add the lib classes in the main jar
jar {
    from { project(":audit-reactive-lib").sourceSets.main.output.classesDir }
}

// Use gradle wrapper to update the current wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

test {
//    testLogging.showStandardStreams = true
//    beforeTest { descriptor ->
//        logger.lifecycle("Running test: " + descriptor)
//    }

    include 'com/octo/reactive/audit/**'

    def weaver = "-javaagent:" +
            project.configurations.testRuntime.find { it.name.startsWith("aspectjweaver-") }
    def auditReactiveConf = "-DauditReactive=src/test/resources/testAuditReactive.properties"
    def logConfig = "-Djava.util.logging.config.file=src/test/resources/testLogging.properties"
    jvmArgs = [weaver, auditReactiveConf, logConfig]
}

// Package the distribution with bin, etc and lib sub directories
distributions {
    main {
        contents {
            into('bin') {
                from { 'src/main/dist/bin' }
                fileMode = 0755
            }
            into('lib') {
                from project(':audit-reactive-lib').jar
                from jar
                rename { it.substring(0, it.indexOf(version) - 1) + it.substring(it.lastIndexOf("."), it.size()) }
            }
            into('lib') {
                from project.configurations.testRuntime.find { it.name.startsWith("aspectjweaver-") }
                rename { "aspectjweaver.jar" }
            }
        }
    }
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
			credentials {
            	username sonatypeNexusOssUser
            	password sonatypeNexusOssPassword
        	}
            url "$buildDir/repo"
        }
    }
}


